{"ast":null,"code":"\"use strict\";\n\nvar reduce = require(\"reducible/reduce\");\nvar isError = require(\"reducible/is-error\");\nvar isReduced = require(\"reducible/is-reduced\");\nvar end = require(\"reducible/end\");\nvar hub = require(\"./hub\");\nfunction Promise() {\n  this.delivered = false;\n  this.next = void 0;\n  this.initial = void 0;\n}\nreduce.define(Promise, function reducePromise(promise, next, initial) {\n  if (promise.delivered) return reduce(promise.value, next, initial);\n  promise.next = next;\n  promise.initial = initial;\n});\nfunction deliver(promise, value) {\n  promise.delivered = true;\n  promise.value = value;\n  if (promise.next) reduce(value, promise.next, promise.initial);\n}\nfunction fold(source, next, initial) {\n  /**\n  Fold is just like `reduce` with a difference that `next` reducer / folder\n  function it takes has it's parameters reversed. One always needs `value`,\n  but not always accumulated one. To avoid conflict with array `reduce` we\n  have a `fold`.\n  **/\n  var promise = new Promise();\n  reduce(source, function fold(value, state) {\n    // If source is `end`-ed deliver accumulated `state`.\n    // If is source has an error, deliver that.\n    if (isError(value)) {\n      deliver(promise, value);\n      throw value;\n    }\n    if (value === end) return deliver(promise, state);\n\n    // Accumulate new `state`\n    state = next(value, state);\n    // If already reduced, then deliver.\n    if (isReduced(state)) deliver(promise, state.value);\n    return state;\n  }, initial);\n  return promise.delivered ? promise.value : hub(promise);\n}\nmodule.exports = fold;","map":{"version":3,"names":["reduce","require","isError","isReduced","end","hub","Promise","delivered","next","initial","define","reducePromise","promise","value","deliver","fold","source","state","module","exports"],"sources":["D:/New folder (3)/websites/node_modules/reducers/fold.js"],"sourcesContent":["\"use strict\";\n\nvar reduce = require(\"reducible/reduce\")\nvar isError = require(\"reducible/is-error\")\nvar isReduced = require(\"reducible/is-reduced\")\nvar end = require(\"reducible/end\")\nvar hub = require(\"./hub\")\n\nfunction Promise() {\n  this.delivered = false\n  this.next = void(0)\n  this.initial = void(0)\n}\nreduce.define(Promise, function reducePromise(promise, next, initial) {\n  if (promise.delivered) return reduce(promise.value, next, initial)\n  promise.next = next\n  promise.initial = initial\n})\n\nfunction deliver(promise, value) {\n  promise.delivered = true\n  promise.value = value\n  if (promise.next) reduce(value, promise.next, promise.initial)\n}\n\n\nfunction fold(source, next, initial) {\n  /**\n  Fold is just like `reduce` with a difference that `next` reducer / folder\n  function it takes has it's parameters reversed. One always needs `value`,\n  but not always accumulated one. To avoid conflict with array `reduce` we\n  have a `fold`.\n  **/\n  var promise = new Promise()\n  reduce(source, function fold(value, state) {\n    // If source is `end`-ed deliver accumulated `state`.\n    // If is source has an error, deliver that.\n    if (isError(value)) {\n      deliver(promise, value)\n      throw value\n    }\n    if (value === end) return deliver(promise, state)\n\n    // Accumulate new `state`\n    state = next(value, state)\n    // If already reduced, then deliver.\n    if (isReduced(state)) deliver(promise, state.value)\n\n    return state\n  }, initial)\n\n  return promise.delivered ? promise.value : hub(promise)\n}\n\nmodule.exports = fold\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIC,OAAO,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC3C,IAAIE,SAAS,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAC/C,IAAIG,GAAG,GAAGH,OAAO,CAAC,eAAe,CAAC;AAClC,IAAII,GAAG,GAAGJ,OAAO,CAAC,OAAO,CAAC;AAE1B,SAASK,OAAOA,CAAA,EAAG;EACjB,IAAI,CAACC,SAAS,GAAG,KAAK;EACtB,IAAI,CAACC,IAAI,GAAG,KAAK,CAAE;EACnB,IAAI,CAACC,OAAO,GAAG,KAAK,CAAE;AACxB;AACAT,MAAM,CAACU,MAAM,CAACJ,OAAO,EAAE,SAASK,aAAaA,CAACC,OAAO,EAAEJ,IAAI,EAAEC,OAAO,EAAE;EACpE,IAAIG,OAAO,CAACL,SAAS,EAAE,OAAOP,MAAM,CAACY,OAAO,CAACC,KAAK,EAAEL,IAAI,EAAEC,OAAO,CAAC;EAClEG,OAAO,CAACJ,IAAI,GAAGA,IAAI;EACnBI,OAAO,CAACH,OAAO,GAAGA,OAAO;AAC3B,CAAC,CAAC;AAEF,SAASK,OAAOA,CAACF,OAAO,EAAEC,KAAK,EAAE;EAC/BD,OAAO,CAACL,SAAS,GAAG,IAAI;EACxBK,OAAO,CAACC,KAAK,GAAGA,KAAK;EACrB,IAAID,OAAO,CAACJ,IAAI,EAAER,MAAM,CAACa,KAAK,EAAED,OAAO,CAACJ,IAAI,EAAEI,OAAO,CAACH,OAAO,CAAC;AAChE;AAGA,SAASM,IAAIA,CAACC,MAAM,EAAER,IAAI,EAAEC,OAAO,EAAE;EACnC;AACF;AACA;AACA;AACA;AACA;EACE,IAAIG,OAAO,GAAG,IAAIN,OAAO,CAAC,CAAC;EAC3BN,MAAM,CAACgB,MAAM,EAAE,SAASD,IAAIA,CAACF,KAAK,EAAEI,KAAK,EAAE;IACzC;IACA;IACA,IAAIf,OAAO,CAACW,KAAK,CAAC,EAAE;MAClBC,OAAO,CAACF,OAAO,EAAEC,KAAK,CAAC;MACvB,MAAMA,KAAK;IACb;IACA,IAAIA,KAAK,KAAKT,GAAG,EAAE,OAAOU,OAAO,CAACF,OAAO,EAAEK,KAAK,CAAC;;IAEjD;IACAA,KAAK,GAAGT,IAAI,CAACK,KAAK,EAAEI,KAAK,CAAC;IAC1B;IACA,IAAId,SAAS,CAACc,KAAK,CAAC,EAAEH,OAAO,CAACF,OAAO,EAAEK,KAAK,CAACJ,KAAK,CAAC;IAEnD,OAAOI,KAAK;EACd,CAAC,EAAER,OAAO,CAAC;EAEX,OAAOG,OAAO,CAACL,SAAS,GAAGK,OAAO,CAACC,KAAK,GAAGR,GAAG,CAACO,OAAO,CAAC;AACzD;AAEAM,MAAM,CAACC,OAAO,GAAGJ,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}