{"ast":null,"code":"\"use strict\";\n\nvar reducible = require(\"reducible/reducible\");\nvar reduce = require(\"reducible/reduce\");\nvar isError = require(\"reducible/is-error\");\nvar end = require(\"reducible/end\");\nfunction dropWhile(source, predicate) {\n  /**\n  Returns a sequence of the items in `source` starting from the first\n  item for which `predicate(item)` returns `false`.\n   ## Example\n   var numbers = dropWhile([ 2, 7, 10, 23 ], function(value) {\n    return value < 10\n  })\n  print(numbers)   // => < 10 23 >\n  **/\n  return reducible(function reduceDropWhile(next, initial) {\n    var dropped = false;\n    reduce(source, function reduceDropWhileSource(value, result) {\n      // If value is end of collection or is an error (which also includes\n      // end of collection) just pass it through, `reducible` will take care\n      // of everything.\n      if (value === end) return next(value, result);\n      if (isError(value)) return next(value, result);\n\n      // If already dropped all the intended items (if `dropped` is already\n      // being set to `true` or if current predicate returns `false`). Then\n      // just keep on passing values.\n      if (dropped || (dropped = !predicate(value))) return next(value, result);\n      return result;\n    }, initial);\n  });\n}\nmodule.exports = dropWhile;","map":{"version":3,"names":["reducible","require","reduce","isError","end","dropWhile","source","predicate","reduceDropWhile","next","initial","dropped","reduceDropWhileSource","value","result","module","exports"],"sources":["D:/New folder (3)/websites/node_modules/reducers/drop-while.js"],"sourcesContent":["\"use strict\";\n\nvar reducible = require(\"reducible/reducible\")\nvar reduce = require(\"reducible/reduce\")\nvar isError = require(\"reducible/is-error\")\nvar end = require(\"reducible/end\")\n\nfunction dropWhile(source, predicate) {\n  /**\n  Returns a sequence of the items in `source` starting from the first\n  item for which `predicate(item)` returns `false`.\n\n  ## Example\n\n  var numbers = dropWhile([ 2, 7, 10, 23 ], function(value) {\n    return value < 10\n  })\n  print(numbers)   // => < 10 23 >\n  **/\n  return reducible(function reduceDropWhile(next, initial) {\n    var dropped = false\n    reduce(source, function reduceDropWhileSource(value, result) {\n      // If value is end of collection or is an error (which also includes\n      // end of collection) just pass it through, `reducible` will take care\n      // of everything.\n      if (value === end) return next(value, result)\n      if (isError(value)) return next(value, result)\n\n      // If already dropped all the intended items (if `dropped` is already\n      // being set to `true` or if current predicate returns `false`). Then\n      // just keep on passing values.\n      if (dropped || (dropped = !predicate(value))) return next(value, result)\n\n      return result\n    }, initial)\n  })\n}\n\nmodule.exports = dropWhile\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,MAAM,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIE,OAAO,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC3C,IAAIG,GAAG,GAAGH,OAAO,CAAC,eAAe,CAAC;AAElC,SAASI,SAASA,CAACC,MAAM,EAAEC,SAAS,EAAE;EACpC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGE,OAAOP,SAAS,CAAC,SAASQ,eAAeA,CAACC,IAAI,EAAEC,OAAO,EAAE;IACvD,IAAIC,OAAO,GAAG,KAAK;IACnBT,MAAM,CAACI,MAAM,EAAE,SAASM,qBAAqBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3D;MACA;MACA;MACA,IAAID,KAAK,KAAKT,GAAG,EAAE,OAAOK,IAAI,CAACI,KAAK,EAAEC,MAAM,CAAC;MAC7C,IAAIX,OAAO,CAACU,KAAK,CAAC,EAAE,OAAOJ,IAAI,CAACI,KAAK,EAAEC,MAAM,CAAC;;MAE9C;MACA;MACA;MACA,IAAIH,OAAO,KAAKA,OAAO,GAAG,CAACJ,SAAS,CAACM,KAAK,CAAC,CAAC,EAAE,OAAOJ,IAAI,CAACI,KAAK,EAAEC,MAAM,CAAC;MAExE,OAAOA,MAAM;IACf,CAAC,EAAEJ,OAAO,CAAC;EACb,CAAC,CAAC;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAGX,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}