{"ast":null,"code":"\"use strict\";\n\nvar reducer = require(\"./reducer\");\nvar end = require(\"reducible/end\");\nvar takeWhile = reducer(function takeWhile(predicate, next, value, result) {\n  /**\n  Returns a sequence of successive items from `source` while `predicate(item)`\n  returns `true`. `predicate` must be free of side-effects.\n   ## Example\n   var digits = takeWhile([ 2, 7, 10, 23 ], function(x) { return x < 10 })\n  print(digits)   // => < 2 7 >\n  **/\n  return predicate(value) ? next(value, result) :\n  // Predicate returned `false` just pass `end`. Reducer will take\n  // care of returning `reduced(result)` back.\n  next(end);\n});\nmodule.exports = takeWhile;","map":{"version":3,"names":["reducer","require","end","takeWhile","predicate","next","value","result","module","exports"],"sources":["D:/New folder (3)/websites/node_modules/reducers/take-while.js"],"sourcesContent":["\"use strict\";\n\nvar reducer = require(\"./reducer\")\nvar end = require(\"reducible/end\")\n\n\nvar takeWhile = reducer(function takeWhile(predicate, next, value, result) {\n  /**\n  Returns a sequence of successive items from `source` while `predicate(item)`\n  returns `true`. `predicate` must be free of side-effects.\n\n  ## Example\n\n  var digits = takeWhile([ 2, 7, 10, 23 ], function(x) { return x < 10 })\n  print(digits)   // => < 2 7 >\n  **/\n  return predicate(value) ? next(value, result) :\n         // Predicate returned `false` just pass `end`. Reducer will take\n         // care of returning `reduced(result)` back.\n         next(end)\n})\n\nmodule.exports = takeWhile\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIC,GAAG,GAAGD,OAAO,CAAC,eAAe,CAAC;AAGlC,IAAIE,SAAS,GAAGH,OAAO,CAAC,SAASG,SAASA,CAACC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACzE;AACF;AACA;AACA;AACA;AACA;AACA;EAGE,OAAOH,SAAS,CAACE,KAAK,CAAC,GAAGD,IAAI,CAACC,KAAK,EAAEC,MAAM,CAAC;EACtC;EACA;EACAF,IAAI,CAACH,GAAG,CAAC;AAClB,CAAC,CAAC;AAEFM,MAAM,CAACC,OAAO,GAAGN,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}