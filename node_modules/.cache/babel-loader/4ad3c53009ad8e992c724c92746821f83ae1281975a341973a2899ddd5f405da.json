{"ast":null,"code":"\"use strict\";\n\nvar reducible = require(\"reducible/reducible\");\nvar reduce = require(\"reducible/reduce\");\nvar reduced = require(\"reducible/reduced\");\nvar isError = require(\"reducible/is-error\");\nfunction capture(source, recover) {\n  /**\n  Creates and returns safe version of given `source` sequence, by using\n  `recover` function to recover from errors that may occur while reducing\n  a `source`. This is a mechanism for error handling and recovery for streams\n  that representing IO operations like (XHR / WebSockets etc...) where errors\n  may occur.\n  **/\n  return reducible(function reduceCapture(next, initial) {\n    var failure = void 0;\n    reduce(source, function reduceCaptureSource(value, result) {\n      // If error has already being captured then return\n      if (failure) return failure;\n      // If value is an error then continue accumulation of recovered\n      // sequence.\n      else if (isError(value)) {\n        failure = reduced(result);\n        reduce(recover(value, result), next, result);\n        return failure;\n      }\n      // Otherwise just forward messages.\n      else return next(value, result);\n    }, initial);\n  });\n}\nmodule.exports = capture;","map":{"version":3,"names":["reducible","require","reduce","reduced","isError","capture","source","recover","reduceCapture","next","initial","failure","reduceCaptureSource","value","result","module","exports"],"sources":["D:/New folder (3)/websites/node_modules/reducers/capture.js"],"sourcesContent":["\"use strict\";\n\nvar reducible = require(\"reducible/reducible\")\nvar reduce = require(\"reducible/reduce\")\nvar reduced = require(\"reducible/reduced\")\nvar isError = require(\"reducible/is-error\")\n\nfunction capture(source, recover) {\n  /**\n  Creates and returns safe version of given `source` sequence, by using\n  `recover` function to recover from errors that may occur while reducing\n  a `source`. This is a mechanism for error handling and recovery for streams\n  that representing IO operations like (XHR / WebSockets etc...) where errors\n  may occur.\n  **/\n  return reducible(function reduceCapture(next, initial) {\n    var failure = void(0)\n    reduce(source, function reduceCaptureSource(value, result) {\n      // If error has already being captured then return\n      if (failure) return failure\n      // If value is an error then continue accumulation of recovered\n      // sequence.\n      else if (isError(value)) {\n        failure = reduced(result)\n        reduce(recover(value, result), next, result)\n        return failure\n      }\n      // Otherwise just forward messages.\n      else return next(value, result)\n    }, initial)\n  })\n}\n\nmodule.exports = capture\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,MAAM,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIE,OAAO,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAC1C,IAAIG,OAAO,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAE3C,SAASI,OAAOA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAChC;AACF;AACA;AACA;AACA;AACA;AACA;EACE,OAAOP,SAAS,CAAC,SAASQ,aAAaA,CAACC,IAAI,EAAEC,OAAO,EAAE;IACrD,IAAIC,OAAO,GAAG,KAAK,CAAE;IACrBT,MAAM,CAACI,MAAM,EAAE,SAASM,mBAAmBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzD;MACA,IAAIH,OAAO,EAAE,OAAOA,OAAO;MAC3B;MACA;MAAA,KACK,IAAIP,OAAO,CAACS,KAAK,CAAC,EAAE;QACvBF,OAAO,GAAGR,OAAO,CAACW,MAAM,CAAC;QACzBZ,MAAM,CAACK,OAAO,CAACM,KAAK,EAAEC,MAAM,CAAC,EAAEL,IAAI,EAAEK,MAAM,CAAC;QAC5C,OAAOH,OAAO;MAChB;MACA;MAAA,KACK,OAAOF,IAAI,CAACI,KAAK,EAAEC,MAAM,CAAC;IACjC,CAAC,EAAEJ,OAAO,CAAC;EACb,CAAC,CAAC;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAGX,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}